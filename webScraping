"""
Created on February 13, 2023

@Title: Web Scraping for Hobbyco
@author: Kelvin Hapa


Requirements:

async-generator==1.10
attrs==22.2.0
certifi==2022.12.7
cffi==1.15.1
charset-normalizer==3.0.1
clips==1.1.0
clipspy==1.0.0
colorama==0.4.6
h11==0.14.0
idna==3.4
numpy==1.24.1
outcome==1.2.0
packaging==23.0
pandas==1.5.2
pycparser==2.21
pyodbc==4.0.35
PySocks==1.7.1
python-dateutil==2.8.2
python-dotenv==0.21.0
pytz==2022.7
requests==2.28.2
selenium==3.141.0
six==1.16.0
sniffio==1.3.0
sortedcontainers==2.4.0
tqdm==4.64.1
trio==0.22.0
trio-websocket==0.9.2
urllib3==1.26.14
webdriver-manager==3.8.5
wsproto==1.2.0


Description:

Web scraping for https://www.hobbyco.com.au/

Extract:
1. Product name
2. Product ID
3. Price

For Products:
1. Traxxas RC cars
2. Tamiya Model Kits


Note:
After the website completely loads its content,
there will be a 10 seconds delay and
wait for a popup (Subscription popup) to appear,
after the popup appeared,
click on a blank space in the website
to remove the popup.
You must do this to avoid error.
If you successfully remove the popup within the 10 seconds delay,
the code will run smoothly.
"""


#-------------------------------------------------------------------------------------#

## Python Libraries

from os import system
from selenium.webdriver.chrome.options import Options
from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
import time
from datetime import datetime
import pandas as pd


#-------------------------------------------------------------------------------------#


## Functions

def clickBtnByXpath(xpath, sleep):
    btn = driver.find_element_by_xpath(xpath)
    text = btn.text
    btn.click()
    time.sleep(sleep)

    return text


def navigate(product):
    for ind, val in enumerate(product):
        if ind not in [0, 3, 6]:
            clickBtnByXpath(val[0], val[1])
        elif ind == 0:
            category = clickBtnByXpath(val[0], val[1])
        elif ind == 3:
            brand = clickBtnByXpath(val[0], val[1])
        elif ind == 6:
            type = clickBtnByXpath(val[0], val[1])

    return category, brand, type


def extractData(date, company, category, brand, type):
    products_box = driver.find_elements_by_xpath('//*[@id="CollectionAjaxContent"]/div/div/div[2]/div[2]/div/div[1]/div[2]/div')

    for div in products_box:
        
        id = div.get_attribute('data-product-id')
        url = div.find_element_by_xpath('./div/a').get_attribute('href')
        name = div.find_element_by_xpath('./div/a/div[2]/div[1]').text
        price_box = div.find_elements_by_xpath('./div/a/div[2]/div[3]/span')
        
        if price_box == []:
            sale_price = div.find_element_by_xpath('./div/a/div[2]/div[3]').text
            reg_price = sale_price
            disc = "$0"
        else:
            sale_price = price_box[2].text
            reg_price = price_box[1].text
            disc = price_box[3].text

        data['Date'].append(date)
        data['ID'].append(id)
        data['Name'].append(name)
        data['Sale_Price'].append(sale_price)
        data['Reg_Price'].append(reg_price)
        data['Discount'].append(disc)
        data['Category'].append(category)
        data['Brand'].append(brand)
        data['Type'].append(type)
        data['Company'].append(company)
        data['URL'].append(url)

    changePage(date, company, category, brand, type)


def changePage(date, company, category, brand, type):
    next_btn = driver.find_elements_by_xpath('//*[@id="CollectionAjaxContent"]/div/div/div[2]/div[2]/div/div[2]/span[4]/a[@title="Next"]')

    if next_btn != []:
        next_btn[0].click()
        time.sleep(5)
        extractData(date, company, category, brand, type)
    else:
        next_btn = driver.find_elements_by_xpath('//*[@id="CollectionAjaxContent"]/div/div/div[2]/div[2]/div/div[2]/span[5]/a[@title="Next"]')
        
        if next_btn != []:
            next_btn[0].click()
            time.sleep(5)
            extractData(date, company, category, brand, type)


#-------------------------------------------------------------------------------------#


## Initialize data dictionary

data = {
    'Date': [],
    'ID': [],
    'Name': [],
    'Sale_Price': [],
    'Reg_Price': [],
    'Discount': [],
    'Category': [],
    'Brand': [],
    'Type': [],
    'Company': [],
    'URL': []
}

date = datetime.today()
company = 'Hobbyco'


#-------------------------------------------------------------------------------------#


## open browser

system('cls')

website = 'https://www.hobbyco.com.au/'

driver = webdriver.Chrome(ChromeDriverManager().install())
driver.maximize_window()
driver.get(website)
time.sleep(10)

system('cls')


#-------------------------------------------------------------------------------------#


## navigat thru pages and extract data for product 1

tamiyaModelKits = [
    ('//*[@id="SiteHeader"]/div[1]/div/div[2]/ul/li[6]/a', 5),
    ('//*[@id="CollectionAjaxContent"]/div/div/div[2]/div[2]/div/div[1]/div[1]/div[1]/button', 1),
    ('//*[@id="FilterDrawer"]/div/div[2]/form/div[1]/div/button', 1),
    ('//*[@id="SidebarDrawer-1-filter-brand"]/div/ul/li[38]/label/span[2]', 5),
    ('//*[@id="CollectionAjaxContent"]/div/div/div[2]/div[2]/div/div[1]/div[1]/div[1]/button', 1),
    ('//*[@id="FilterDrawer"]/div/div[2]/form/div[2]/div/button', 1),
    ('//*[@id="SidebarDrawer-2-filter-product-type"]/div/ul/li[2]/label/span[2]/span', 5)
]

category, brand, type = navigate(tamiyaModelKits)

extractData(date, company, category, brand, type)


#-------------------------------------------------------------------------------------#


## navigat thru pages and extract data for product 2

traxxasRCCars = [
    ('//*[@id="SiteHeader"]/div[1]/div/div[2]/ul/li[10]/a', 5),
    ('//*[@id="CollectionAjaxContent"]/div/div/div[2]/div[2]/div/div[1]/div[1]/div[1]/button', 1),
    ('//*[@id="FilterDrawer"]/div/div[2]/form/div[1]/div/button', 1),
    ('//*[@id="SidebarDrawer-1-filter-brand"]/div/ul/li[27]/label/span[2]/span', 5),
    ('//*[@id="CollectionAjaxContent"]/div/div/div[2]/div[2]/div/div[1]/div[1]/div[1]/button', 1),
    ('//*[@id="FilterDrawer"]/div/div[2]/form/div[2]/div/button', 1),
    ('//*[@id="SidebarDrawer-2-filter-product-type"]/div/ul/li[2]/label/span[2]/span', 5)
]

category, brand, type = navigate(traxxasRCCars)

extractData(date, company, category, brand, type)


#-------------------------------------------------------------------------------------#


## quit browser

driver.quit()


#-------------------------------------------------------------------------------------#


## save data into a dataframe
df_hobbyco = pd.DataFrame(data)
print(df_hobbyco)
print(df_hobbyco.shape)


#-------------------------------------------------------------------------------------#


## save dataframe into a csv file

df_hobbyco.to_csv('Hobbyco_Products_'+str(date)[0:10]+'.csv', index=False, encoding='utf-8')